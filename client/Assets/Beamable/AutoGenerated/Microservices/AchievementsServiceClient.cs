//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Microservices.AchievementsService"/> </summary
    public sealed class AchievementsServiceClient : MicroserviceClient
    {
        
        public AchievementsServiceClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        /// <summary>
        /// Call the CheckAchievement method on the AchievementsService microservice
        /// <see cref="Beamable.Microservices.AchievementsService.CheckAchievement"/>
        /// </summary>
        public Beamable.Common.Promise<bool> CheckAchievement(Beamable.Microservices.AchievementContent achievement, string key)
        {
            string serialized_achievement = this.SerializeArgument<Beamable.Microservices.AchievementContent>(achievement);
            string serialized_key = this.SerializeArgument<string>(key);
            string[] serializedFields = new string[] {
                    serialized_achievement,
                    serialized_key};
            return this.Request<bool>("AchievementsService", "CheckAchievement", serializedFields);
        }
        
        /// <summary>
        /// Call the LoadAchievements method on the AchievementsService microservice
        /// <see cref="Beamable.Microservices.AchievementsService.LoadAchievements"/>
        /// </summary>
        public Beamable.Common.Promise<System.Collections.Generic.List<Beamable.Microservices.AchievementContent>> LoadAchievements()
        {
            string[] serializedFields = new string[0];
            return this.Request<System.Collections.Generic.List<Beamable.Microservices.AchievementContent>>("AchievementsService", "LoadAchievements", serializedFields);
        }
        
        /// <summary>
        /// Call the CheckAchievements method on the AchievementsService microservice
        /// <see cref="Beamable.Microservices.AchievementsService.CheckAchievements"/>
        /// </summary>
        public Beamable.Common.Promise<System.Collections.Generic.List<string>> CheckAchievements(string key)
        {
            string serialized_key = this.SerializeArgument<string>(key);
            string[] serializedFields = new string[] {
                    serialized_key};
            return this.Request<System.Collections.Generic.List<string>>("AchievementsService", "CheckAchievements", serializedFields);
        }
        
        /// <summary>
        /// Call the AchievementEarnedNotification method on the AchievementsService microservice
        /// <see cref="Beamable.Microservices.AchievementsService.AchievementEarnedNotification"/>
        /// </summary>
        public Beamable.Common.Promise<System.Threading.Tasks.Task> AchievementEarnedNotification(long dbid, object achievementId)
        {
            string serialized_dbid = this.SerializeArgument<long>(dbid);
            string serialized_achievementId = this.SerializeArgument<object>(achievementId);
            string[] serializedFields = new string[] {
                    serialized_dbid,
                    serialized_achievementId};
            return this.Request<System.Threading.Tasks.Task>("AchievementsService", "AchievementEarnedNotification", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersAchievementsServiceClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterBeamable_Microservices_AchievementContent : MicroserviceClientDataWrapper<Beamable.Microservices.AchievementContent>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Int64 : MicroserviceClientDataWrapper<long>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Object : MicroserviceClientDataWrapper<object>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    internal static class ExtensionsForAchievementsServiceClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<AchievementsServiceClient>();
        }
        
        public static AchievementsServiceClient AchievementsService(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<AchievementsServiceClient>();
        }
    }
}
